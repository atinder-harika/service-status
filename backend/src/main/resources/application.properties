spring.application.name=service-status-backend

# Server Configuration
# Railway provides $PORT env var - use it if available, else default to 8080 for local dev
server.port=${PORT:8080}

# Database Connection (configured via environment variables in Railway)
# Local: Use application.properties
# Railway: Set these as environment variables in Railway dashboard
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/postgres}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.schemas=${SPRING_FLYWAY_SCHEMAS:dev}
spring.flyway.default-schema=${SPRING_FLYWAY_DEFAULT_SCHEMA:dev}

# Spring Actuator (health checks)
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# CORS Configuration (allow GitHub Pages frontend)
allowed.origins=${ALLOWED_ORIGINS:http://localhost:5173,https://atinder-harika.github.io}

# Logging
logging.level.com.atinder.service_status_backend=DEBUG
logging.level.org.springframework.jdbc.core=DEBUG
